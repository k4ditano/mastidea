services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: mastidea-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mastidea
      POSTGRES_PASSWORD: mastidea_password_2025
      POSTGRES_DB: mastidea
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mastidea"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: mastidea-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__GRPC_PORT=6334

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mastidea-app
    restart: unless-stopped
    ports:
      - "3002:3000"
    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://mastidea:mastidea_password_2025@postgres:5432/mastidea?schema=public
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=mastidea_ideas
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-meta-llama/llama-3.1-8b-instruct:free}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEXT_PUBLIC_APP_NAME=MastIdea
      - NODE_ENV=production
    volumes:
      - ./prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        node server.js
      "

volumes:
  postgres_data:
    driver: local
  qdrant_data:
    driver: local

networks:
  default:
    name: mastidea-network
